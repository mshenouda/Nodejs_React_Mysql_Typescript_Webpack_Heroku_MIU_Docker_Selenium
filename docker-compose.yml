version: "3.8"
services: 
  db:
    image: mysql:8.0
    container_name: mysqlcontainer
    restart: unless-stopped
    volumes:
      - ./sql/mysql.sql:/docker-entrypoint-initdb.d/0_init.sql
      - ~/DEVELOPMENT_CODE/Sql:/var/lib/mysql
    ports:
      - 3307:3306
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_HOST: db
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: '%'
      MYSQL_ALLOW_EMPTY_PASSWORD: ok
      SERVICE_TAGS: dev
      SERVICE_NAME: db
      NODE_ENV: development
    networks:
      - internalnet

  api:
    container_name: nodejscontainer
    image: nodeapp:v1
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports: 
      - 8082:8082
    expose:
      - 8082
    networks:
      - internalnet        
    volumes: 
      - ./backend:/app
      - '/app/node_modules'
    depends_on: 
      - db
    environment:
      HOST: 0.0.0.0
      MYSQL_HOST: db
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_ROOT: ${MYSQL_ROOT}
      MYSQL_USER: ${MYSQL_USER}
      REACT_APP_HOST: ${REACT_APP_HOST} 
      REACT_APP_SERVER_PORT: ${REACT_APP_SERVER_PORT}
      REACT_PORT: ${REACT_PORT}
      NODE_ENV: development
  
  react:
    container_name: reactcontainer
    image: react:v1
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports: 
      - 3000:3000
    expose:
      - 3000
    networks:
      - internalnet
    volumes: 
      - ./frontend:/app
      - '/app/node_modules'
    environment:
      REACT_APP_HOST: ${REACT_APP_HOST}
      REACT_APP_SERVER_PORT: ${REACT_APP_SERVER_PORT}
      REACT_PORT: ${REACT_PORT}
      NODE_ENV: development

networks:
  internalnet:
    driver: bridge